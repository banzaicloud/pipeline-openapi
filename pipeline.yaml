openapi: 3.0.0
info:
  description: Pipeline v0.3.0 swagger
  version: "0.3.0"
  title: Pipeline API
  contact:
    email: info@banzaicloud.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: cluster
    description: Cluster realted funtions
  - name: clusters
    description: Clusters realted funtions
  - name: deployment
    description: Functions related for a deployment
  - name: deployments
    description: Deployment related functions for a cluster
  - name: profiles
    description: Cluster profiles related functions
paths:
  /clusters:
    post:
      security:
        - bearerAuth: []
      tags:
        - clusters
      summary: Create cluster
      description: Create a new K8S cluster in the cloud
      operationId: CreateCluster
      responses:
        '200':
          description: Cluster created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClusterResponse_200'
        '400':
          description: Cluster creation failed
          content:
            application/json:
             schema:
                $ref: '#/components/schemas/CreateClusterResponse_400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'

            examples:
              AWS:
                value:
                  name: "awscluster-pipelineuser-123"
                  location: "eu-west-1"
                  cloud: "amazon"
                  nodeInstanceType: "m4.xlarge"
                  properties:
                    properties:
                      amazon:
                        $ref: '#components/schemas/CreateAmazonProperties'

              AKS:
                value:
                  name: "azcluster-pipelineuser-123"
                  location: "westeurope"
                  cloud: "azure"
                  nodeInstanceType: "Standard_D2_v2"
                  properties:
                    azure:
                      $ref: '#components/schemas/CreateAzureProperties'

              GKE:
                value:
                  name: "gkecluster-pipelineuser-123"
                  location: "us-central1-a"
                  cloud: "google"
                  nodeInstanceType: "n1-standard-1"
                  properties:
                    google:
                      $ref: '#components/schemas/CreateGoogleProperties'
    get:
      security:
        - bearerAuth: []
      tags:
        - clusters
      summary: List clusters
      operationId: ListClusters
      description: Listing all the K8S clusters from the cloud
      responses:
        '200':
          description: All cluster listed
          content:
            application/json:
             schema:
                $ref: '#/components/schemas/ClusterListResponse'
        '400':
          description: Error during listing clusters
          content:
            application/json:
             schema:
                $ref: '#/components/schemas/BaseError_400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
  '/clusters/{id}':
    get:
      security:
        - bearerAuth: []
      tags:
        - cluster
      summary: Get cluster
      description: Getting cluster details
      operationId: GetCluster
      parameters:
        - name: id
          in: path
          description: Selected cluster identification (number)
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Getting cluster succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClusterResponse_200'
        '400':
          description: Error during getting cluster details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError_400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Cluster not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFound'

    put:
      security:
        - bearerAuth: []
      tags:
        - cluster
      summary: Update cluster
      description: Updating an existing K8S cluster
      operationId: UpdateCluster
      parameters:
        - name: id
          in: path
          description: Selected cluster identification (number)
          required: true
          schema:
            type: integer
      responses:
        '202':
          description: Cluster update accepted
        '400':
          description: Error during updating cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError_400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Cluster not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterRequest'

    delete:
      security:
        - bearerAuth: []
      tags:
        - cluster
      summary: Delete cluster
      description: Deleting a K8S cluster
      operationId: DeleteCluster
      parameters:
        - name: id
          in: path
          description: Selected cluster identification (number)
          required: true
          schema:
            type: integer
      responses:
        '202':
          description: Cluster deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterDelete_200'
        '400':
          description: Error during deleting cluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError_400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Cluster not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFound'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError_500'

    head:
      security:
        - bearerAuth: []
      tags:
        - cluster
      summary: Get cluster status
      operationId: GetClusterStatus
      description: Getting the K8S cluster status
      parameters:
        - name: id
          in: path
          required: true
          description: Selected cluster identification (number)
          schema:
            type: integer
      responses:
        '200':
          description: Cluster deleted successfully
        '400':
          description: Error during getting cluster status
        '401':
          description: Unauthorized
        '404':
          description: Cluster not found

  '/clusters/{id}/config':
    get:
      security:
        - bearerAuth: []
      tags:
       - cluster
      summary: Get a cluster config
      operationId: GetClusterConfig
      description: Getting a K8S cluster config file
      parameters:
        - name: id
          in: path
          required: true
          description: Selected cluster identification (number)
          schema:
            type: integer
      responses:
        '200':
          description: "Getting config file succeeded"
          content:
            text/plain:
              schema:
                type: string
                example: "encoded configuration file..."
        '400':
          description: "Error during getting config file"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError_400'
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: "Cluster not found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFound'
  '/clusters/{id}/endpoints':
    get:
      security:
        - bearerAuth: []
      tags:
        - cluster
      summary: List service public endpoints
      operationId: ListEndpoints
      description: List service public endpoints
      parameters:
        - name: id
          in: path
          required: true
          description: Selected cluster identification (number)
          schema:
            type: integer
      responses:
        '200':
          description: "Endpoints listed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEndpointsResponse'
        '400':
          description: "Error during getting endpoints"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError_400'
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: "Cluster not found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFound'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError_500'

  '/clusters/{id}/helminit':
    post:
      security:
        - bearerAuth: []
      tags:
       - cluster
      summary: Initialize helm
      operationId: HelmInit
      description: Initialize helm in the cluster
      parameters:
        - name: id
          in: path
          required: true
          description: Selected cluster identification (number)
          schema:
            type: integer
      responses:
        '201':
          description: "Helm initialized int the cluster"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelmInitResponse'
        '400':
          description: "Error during getting endpoints"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError_400'
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: "Cluster not found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFound'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelmInitRequest'

  '/clusters/{id}/deployments':
    get:
      security:
        - bearerAuth: []
      tags:
        - deployments
      summary: List deployments
      operationId: ListDeployments
      description: Listing Helm deployments
      parameters:
        - name: id
          in: path
          required: true
          description: Selected cluster identification (number)
          schema:
            type: integer
      responses:
        '200':
          description: "Deployments listed"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeploymentsResponse'
        '400':
          description: "Error during getting endpoints"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError_400'
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: "Cluster not found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFound'
    post:
      security:
        - bearerAuth: []
      tags:
        - deployments
      summary: Create a Helm deployment
      operationId: CreateDeployment
      description: Creating a Helm deployment
      parameters:
        - name: id
          in: path
          required: true
          description: Selected cluster identification (number)
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeploymentRequest'
      responses:
        '201':
          description: "Deployment created successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDeploymentResponse'
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '400':
          description: "Error during creating deployment"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseError_400'
        '404':
          description: "Cluster not found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNotFound'
    head:
      security:
        - bearerAuth: []
      tags:
        - deployments
      summary: Get tiller status
      operationId: GetTillerStatus
      description: Checking if tiller ready to accept deployments
      parameters:
        - name: id
          in: path
          required: true
          description: Selected cluster identification (number)
          schema:
            type: integer
      responses:
        '200':
          description: "Tiller is available"
        '400':
          description: "Error during creating deployment"
        '401':
          description: "Unauthorized"
        '404':
          description: "Cluster not found"

  '/clusters/{id}/deployments/{name}':
      delete:
        security:
          - bearerAuth: []
        tags:
          - deployment
        summary: Delete deployment
        operationId: DeleteDeployment
        description: Deleting a Helm deployment
        parameters:
          - name: id
            in: path
            required: true
            description: Selected cluster identification (number)
            schema:
              type: integer
          - name: name
            in: path
            required: true
            description: Deployment name
            schema:
              type: string
        responses:
          '200':
            description: "Deployment deleted successfully"
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DeleteDeploymentResponse'
          '400':
            description: "Error during delete deployment"
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BaseError_400'
          '401':
            description: "Unauthorized"
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Unauthorized'
          '404':
            description: "Cluster not found"
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ClusterNotFound'

      put:
        security:
          - bearerAuth: []
        tags:
          - deployment
        summary: Update deployment
        operationId: UpdateDeployment
        description: Updating a Helm deployment
        parameters:
          - name: id
            in: path
            required: true
            description: Selected cluster identification (number)
            schema:
              type: integer
          - name: name
            in: path
            required: true
            description: Deployment name
            schema:
              type: string
        responses:
          '501':
            description: "Not implemented"
      head:
        tags:
         - deployment
        summary: Check deployment status
        operationId: HelmDeploymentStatus
        description: Checking the status of a deployment through the helm client API
        parameters:
          - name: id
            in: path
            required: true
            description: Selected cluster identification (number)
            schema:
              type: integer
          - name: name
            in: path
            required: true
            description: Deployment name
            schema:
              type: string
        responses:
          '200':
            description: "Deployment status is OK"
          '400':
            description: "Error during checking deployment status"
          '401':
            description: "Unauthorized"
          '404':
            description: "Cluster not found"

  '/cluster/profiles/{type}':
    get:
      security:
          - bearerAuth: []
      tags:
        - profiles
      summary: List cluster profiles
      operationId: ListProfiles
      description: Listing cluster profiles by cloud type
      parameters:
        - name: type
          in: path
          required: true
          description: Cloud type
          schema:
            type: string
      responses:
        '200':
          description: "Profiles listed"
          content:
            application/json:
              schema:
                $ref: '#components/schemas/ProfileListResponse'


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT


  schemas:

    CreateClusterRequest:
      type: object
      required:
        - name
        - location
        - nodeInstanceType
        - cloud
        - properties
      properties:
        name:
          type: string
          example: "gkecluster-pipelineuser-123"
        location:
          type: string
          example: "us-central1-a"
        nodeInstanceType:
          type: string
          example: "n1-standard-1"
        cloud:
          type: string
          example: "google"
        properties:
          type: object
          oneOf:
            - $ref: '#components/schemas/CreateAmazonProperties'
            - $ref: '#components/schemas/CreateAzureProperties'
            - $ref: '#components/schemas/CreateGoogleProperties'
          example:
            google:
              project:
                master:
                  version: "1.8.7-gke.1"
                node:
                  count: 1
                  version: "1.8.7-gke.1"

    CreateAmazonProperties:
      type: object
      required:
        - amazon
      properties:
        amazon:
          type: object
          required:
            - master
            - node
          properties:
            master:
              type: object
              properties:
                instanceType:
                  type: string
                  example: "m4.xlarge"
                image:
                  type: string
                  example: "ami-06d1667f"
            node:
              type: object
              properties:
                spotPrice:
                  type: string
                  example: "0.2"
                minCount:
                  type: integer
                  example: 1
                maxCount:
                  type: integer
                  example: 2
                image:
                  type: string
                  example: "ami-06d1667f"

    CreateAzureProperties:
      type: object
      required:
        - azure
      properties:
        azure:
          type: object
          required:
            - node
          properties:
            node:
              type: object
              required:
                - resourceGroup
              properties:
                resourceGroup:
                  type: string
                  example: "myRg"
                agentCount:
                  type: integer
                  example: 1
                agentName:
                  type: string
                  example: "agentpool1"
                kubernetesVersion:
                  type: string
                  example: "1.8.2"

    CreateGoogleProperties:
      type: object
      required:
        - google
      properties:
        google:
          type: object
          required:
             - project
          properties:
            project:
              type: string
              example: "projectId"
            master:
              type: object
              properties:
                version:
                  type: string
                  example: "1.8.7-gke.1"
            node:
              type: object
              properties:
                count:
                  type: string
                  example: 1
                version:
                  type: string
                  example: "1.8.7-gke.1"
                serviceAccount:
                  type: string
                  example: "serviceAccountExample"

    CreateClusterResponse_200:
      type: object
      properties:
        status:
          type: integer
          example: 200
        name:
          type: string
          example: "gkecluster-pipelineuser-123"
        location:
          type: string
          example: "us-central1-a"
        cloud:
          type: string
          example: "google"
        nodeInstanceType:
          type: string
          example: "n1-standard-1"
        id:
          type: integer
          example: 1

    CreateClusterResponse_400:
      type: object
      properties:
        code:
          type: integer
          example: 400
        message:
          type: string
          example: Invalid version
        error:
          type: string
          example: Invalid version

    ClusterListResponse:
      type: array
      items:
        $ref: '#components/schemas/CreateClusterResponse_200'

    BaseError_400:
      type: object
      properties:
        code:
          type: integer
          example: 400
        message:
          type: string
          example: "Error during process"
        error:
          type: string
          example: "Error during process"

    BaseError_500:
      type: object
      properties:
        code:
          type: integer
          example: 500
        message:
          type: string
          example: "Error during process"
        error:
          type: string
          example: "Error during process"

    ClusterNotFound:
      type: object
      properties:
        code:
          type: integer
          example: 404
        message:
          type: string
          example: "Cluster not found"
        error:
          type: string
          example: "record not found"

    UpdateClusterRequest:
      type: object
      required:
        - cloud
        - properties
      properties:
        cloud:
          type: string
          example: google
        properties:
          type: object
          oneOf:
            - $ref: '#/components/schemas/UpdateAmazonProperties'
            - $ref: '#/components/schemas/UpdateAzureProperties'
            - $ref: '#/components/schemas/UpdateGoogleProperties'
          example:
            google:
              node:
                count: 1

    UpdateAmazonProperties:
      type: object
      required:
        - amazon
      properties:
        amazon:
          type: object
          properties:
            node:
              type: object
              properties:
                minCount:
                  type: integer
                  example: 2
                maxCount:
                  type: integer
                  example: 4

    UpdateAzureProperties:
      type: object
      required:
        - azure
      properties:
        azure:
          type: object
          properties:
            node:
              type: object
              properties:
                agentCount:
                  type: integer
                  example: 2

    UpdateGoogleProperties:
      type: object
      properties:
        master:
          type: object
          properties:
            version:
              type: string
        node:
          type: object
          properties:
            count:
              type: string
            version:
              type: string
            serviceAccount:
              type: string

    ClusterDelete_200:
      type: object
      properties:
        status:
          type: integer
          example: 202
        name:
          type: string
          example: "gkecluster-pipelineuser-123"
        message:
          type: string
          example: "Cluster deleted successfully"
        id:
          type: integer
          example: 1

    Unauthorized:
      type: object
      properties:
        code:
          type: integer
          example: 401
        message:
          type: string
          example: "Invalid token"
        error:
          type: string
          example: "token contains an invalid number of segments"

    ListEndpointsResponse:
      type: object
      properties:
        endpoints:
          type: array
          items:
            $ref: '#components/schemas/EndpointItem'

    EndpointItem:
      type: object
      properties:
        name:
          type: string
          example: "pipeline-traefik"
        host:
          type: string
          example: "11.11.11.111"
        urls:
          type: array
          items:
            $ref: '#components/schemas/URLItem'
          example:

    URLItem:
      type: object
      properties:
        servicename:
          type: string
          example: "serviceName"
        url:
          type: string
          example: "url"

    ListDeploymentsResponse:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            example: "pipeline"
          chart:
            type: string
            example: "pipeline-cluster-ingress-0.0.1"
          version:
            type: integer
            example: 1
          updated:
            type: string
            example: "Wed Mar  7 09:56:57 2018"
          status:
            type: string
            example: "DEPLOYED"

    CreateDeploymentRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        releasename:
          type: string
        version:
          type: string
        values:
          type: object
      example:
          name: "banzaicloud-stable/drone"


    CreateDeploymentResponse:
      type: object
      properties:
        release_name:
          type: string
          example: "vigilant-mandrill"
        notes:
          type: string
          example: "deploy notes"

    DeleteDeploymentResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
        message:
          type: string
          example: "Deployment deleted!"
        name:
          type: string
          example: "vigilant-mandrill"

    HelmInitResponse:
      type: object
      properties:
        status:
          type: integer
          example: 201
        message:
          type: string
          example: "helm initialising"

    HelmInitRequest:
      type: object
      required:
        - namespace
        - service_account
      properties:
        kube_context:
          type: string
        namespace:
          type: string
        upgrade:
          type: boolean
        service_account:
          type: string
        canary_image:
          type: boolean
        tiller_image:
          type: string
        history_max:
          type: integer
      example:
        namespace: "kube-system"
        service_account: "tiller"
        tiller_image: "gcr.io/kubernetes-helm/tiller:v2.7.2"

    ProfileListResponse:
      type: object
      properties:
        instanceName:
          type: string
          example: "default"
        location:
          type: string
          example: "us-central1-a"
        cloud:
          type: string
          example: "google"
        nodeInstanceType:
          type: string
          example: "n1-standard-1"
        properties:
          type: object
          oneOf:
            - $ref: '#components/schemas/ClusterProfileAmazon'
            - $ref: '#components/schemas/ClusterProfileAzure'
            - $ref: '#components/schemas/ClusterProfileGoogle'
          example:
            google:
              master:
                version: "1.8.7-gke.1"
              node:
                count: 1
                version: "1.8.7-gke.1"
                serviceAccount: ""

    ClusterProfileAmazon:
      type: object
      properties:
        amazon:
          type: object
          properties:
            master:
              type: object
              properties:
                instanceType:
                  type: string
                  example: "m4.xlarge"
                image:
                  type: string
                  example: "ami-06d1667f"
            node:
              type: object
              properties:
                spotPrice:
                  type: string
                  example: "0.2"
                minCount:
                  type: integer
                  example: 1
                maxCount:
                  type: integer
                  example: 2

    ClusterProfileAzure:
      type: object
      properties:
        azure:
          type: object
          properties:
            node:
              type: object
              properties:
                agentCount:
                  type: integer
                  example: 1
                agentName:
                  type: string
                  example: "agentpool1"
                kubernetesVersion:
                  type: string
                  example: "1.8.2"

    ClusterProfileGoogle:
      type: object
      properties:
        google:
          type: object
          properties:
            master: 
              type: object
              properties:
                version:
                  type: string
                  example: 1.8.7-gke.1
            node:
              type: object
              properties:
                count:
                  type: integer
                  example: 1
                version:
                  type: string
                  example: 1.8.7-gke.1
                serviceAccount:
                  type: string
                  example: "serviceAccountExample"



